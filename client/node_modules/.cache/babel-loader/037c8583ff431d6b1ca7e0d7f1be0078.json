{"ast":null,"code":"var _jsxFileName = \"/Users/dannytszho/Desktop/Coding/Open_Source_Projects/google-docs/client/src/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from 'socket.io-client';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blockquote\", \"code-block\"], [\"clean\"]];\nexport default function TextEditor() {\n  _s();\n\n  const {\n    id: documentID\n  } = useParams();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  console.log(documentID);\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {}, [socket, quill], documentID);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    socket.on('receive-changes', handler);\n    return () => {\n      socket.off('receive-changes', handler);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      if (source !== 'user') return;\n      socket.emit(\"send-changes\", delta);\n    };\n\n    quill.on('text-change', handler);\n    return () => {\n      quill.off('text-change', handler);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innderHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n    setQuill(q);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TextEditor, \"L9RN7TBYkmWfSoRdMwl6bdt7ZKo=\", false, function () {\n  return [useParams];\n});\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/dannytszho/Desktop/Coding/Open_Source_Projects/google-docs/client/src/TextEditor.js"],"names":["useCallback","useEffect","useState","Quill","io","useParams","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","TextEditor","id","documentID","socket","setSocket","quill","setQuill","console","log","s","disconnect","handler","delta","updateContents","on","off","oldDelta","source","emit","wrapperRef","wrapper","innderHTML","editor","document","createElement","append","q","theme","modules","toolbar"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,eAAe,GAAG,CACpB,CAAC;AAAEC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB;AAAV,CAAD,CADoB,EAEpB,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAD,CAFoB,EAGpB,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAD,EAAsB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAtB,CAHoB,EAIpB,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,CAJoB,EAKpB,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAD,EAAgB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAhB,CALoB,EAMpB,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAD,EAAmB;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAAnB,CANoB,EAOpB,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAD,CAPoB,EAQpB,CAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,CARoB,EASpB,CAAC,OAAD,CAToB,CAAxB;AAYA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM;AAACC,IAAAA,EAAE,EAAEC;AAAL,MAAmBX,SAAS,EAAlC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,EAAlC;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,CAAC,GAAGnB,EAAE,CAAC,uBAAD,CAAZ;AACAc,IAAAA,SAAS,CAACK,CAAD,CAAT;AAEA,WAAO,MAAM;AACTA,MAAAA,CAAC,CAACC,UAAF;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AASAvB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACgB,MAAD,EAASE,KAAT,CAFM,EAEWH,UAFX,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,MAAM,IAAI,IAAV,IAAkBE,KAAK,IAAI,IAA/B,EAAqC;;AAErC,UAAMM,OAAO,GAAIC,KAAD,IAAW;AACvBP,MAAAA,KAAK,CAACQ,cAAN,CAAqBD,KAArB;AACH,KAFD;;AAIAT,IAAAA,MAAM,CAACW,EAAP,CAAU,iBAAV,EAA6BH,OAA7B;AAEA,WAAO,MAAM;AACTR,MAAAA,MAAM,CAACY,GAAP,CAAW,iBAAX,EAA8BJ,OAA9B;AACH,KAFD;AAGH,GAZQ,EAYP,CAACR,MAAD,EAASE,KAAT,CAZO,CAAT;AAcAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,MAAM,IAAI,IAAV,IAAkBE,KAAK,IAAI,IAA/B,EAAqC;;AAErC,UAAMM,OAAO,GAAG,CAACC,KAAD,EAAQI,QAAR,EAAkBC,MAAlB,KAA6B;AACzC,UAAIA,MAAM,KAAK,MAAf,EAAuB;AACvBd,MAAAA,MAAM,CAACe,IAAP,CAAY,cAAZ,EAA4BN,KAA5B;AACH,KAHD;;AAIAP,IAAAA,KAAK,CAACS,EAAN,CAAS,aAAT,EAAwBH,OAAxB;AAEA,WAAO,MAAM;AACTN,MAAAA,KAAK,CAACU,GAAN,CAAU,aAAV,EAAyBJ,OAAzB;AACH,KAFD;AAGH,GAZQ,EAYP,CAACR,MAAD,EAASE,KAAT,CAZO,CAAT;AAcA,QAAMc,UAAU,GAAGjC,WAAW,CAACkC,OAAO,IAAI;AACtC,QAAIA,OAAO,IAAI,IAAf,EAAqB;AAErBA,IAAAA,OAAO,CAACC,UAAR,GAAqB,EAArB;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAJ,IAAAA,OAAO,CAACK,MAAR,CAAeH,MAAf;AACA,UAAMI,CAAC,GAAG,IAAIrC,KAAJ,CAAUiC,MAAV,EAAkB;AACxBK,MAAAA,KAAK,EAAE,MADiB;AAExBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAErC;AAAX;AAFe,KAAlB,CAAV;AAIAc,IAAAA,QAAQ,CAACoB,CAAD,CAAR;AACH,GAX6B,EAW3B,EAX2B,CAA9B;AAYA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEP;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GA7DuBnB,U;UACKT,S;;;KADLS,U","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport Quill from \"quill\"\nimport \"quill/dist/quill.snow.css\"\nimport { io } from 'socket.io-client'\nimport { useParams } from \"react-router-dom\"\n\nconst TOOLBAR_OPTIONS = [\n    [{ header: [1 ,2, 3, 4, 5 ,6, false] }],\n    [{ font: [] }],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"bold\", \"italic\", \"underline\"],\n    [{ color: [] }, { background: [] }],\n    [{ script: \"sub\"}, { script: \"super\" }],\n    [{ align: [] }],\n    [\"image\", \"blockquote\", \"code-block\"],\n    [\"clean\"],\n]\n\nexport default function TextEditor() {\n    const {id: documentID} = useParams()\n    const [socket, setSocket] = useState()\n    const [quill, setQuill] = useState()\n    console.log(documentID)\n\n\n    useEffect(() => {\n        const s = io(\"http://localhost:3001\")\n        setSocket(s)\n\n        return () => {\n            s.disconnect()\n        }\n    }, [])\n\n    useEffect(() => {\n\n    }, [socket, quill], documentID)\n\n    useEffect(() => {\n        if (socket == null || quill == null) return\n\n        const handler = (delta) => {\n            quill.updateContents(delta)\n        }\n        \n        socket.on('receive-changes', handler)\n\n        return () => {\n            socket.off('receive-changes', handler)\n        }\n    },[socket, quill])\n\n    useEffect(() => {\n        if (socket == null || quill == null) return\n\n        const handler = (delta, oldDelta, source) => {\n            if (source !== 'user') return\n            socket.emit(\"send-changes\", delta)\n        }\n        quill.on('text-change', handler)\n\n        return () => {\n            quill.off('text-change', handler)\n        }\n    },[socket, quill])\n\n    const wrapperRef = useCallback(wrapper => {\n        if (wrapper == null) return\n\n        wrapper.innderHTML = \"\"\n        const editor = document.createElement(\"div\")\n        wrapper.append(editor)\n        const q = new Quill(editor, {\n            theme: \"snow\", \n            modules: { toolbar: TOOLBAR_OPTIONS },\n        })\n        setQuill(q)\n    }, [])\n    return <div className=\"container\" ref={wrapperRef}></div>\n}\n"]},"metadata":{},"sourceType":"module"}